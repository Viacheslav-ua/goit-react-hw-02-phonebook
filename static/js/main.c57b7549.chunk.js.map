{"version":3,"sources":["components/Filter/Filter.module.css","App.module.css","components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.tsx","components/ContactList/ContactList.tsx","components/Filter/Filter.tsx","App.tsx","index.tsx","components/ContactList/ContactList.module.css"],"names":["module","exports","ContactForm","state","name","number","handleAddInput","e","setState","currentTarget","value","handleSubmit","preventDefault","props","findName","alert","formSubmit","id","uuidv4","reset","className","S","contactsForm","onSubmit","this","caption","type","input","onChange","pattern","title","required","btn","Component","ContactList","list","filterValue","deleteContact","map","toLowerCase","includes","row","text","onClick","Filter","handleChangeFilter","App","contacts","filter","str","find","item","formSubmitHandler","data","prevState","changeFilter","container","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c57b7549.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"caption\":\"Filter_caption__1VQ8o\",\"input\":\"Filter_input__1XSo1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2ViBL\",\"title\":\"App_title__2Ye8G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsForm\":\"ContactForm_contactsForm__8C8wG\",\"input\":\"ContactForm_input__3bYhp\",\"caption\":\"ContactForm_caption__2VXkg\",\"btn\":\"ContactForm_btn__1_AnL\"};","import React, { Component } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport S from \"./ContactForm.module.css\";\r\n\r\ninterface StateType {\r\n  name?: string;\r\n  number?: string;\r\n}\r\n\r\ninterface PropsType {\r\n  formSubmit: any;\r\n  findName: any;\r\n}\r\n\r\nclass ContactForm extends Component<PropsType> {\r\n  state: StateType = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleAddInput = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({ [e.currentTarget.name]: e.currentTarget.value });\r\n  };\r\n\r\n  handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    if (this.props.findName(this.state.name)) {\r\n      alert(this.state.name + \" is already in contacts\");\r\n      return;\r\n    }\r\n    this.props.formSubmit({ id: uuidv4(), ...this.state });\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className={S.contactsForm} onSubmit={this.handleSubmit}>\r\n        <label className={S.caption}>Name</label>\r\n\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          className={S.input}\r\n          value={this.state.name}\r\n          onChange={this.handleAddInput}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n        />\r\n        <label className={S.caption}>Number</label>\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={this.state.number}\r\n          onChange={this.handleAddInput}\r\n          className={S.input}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n        />\r\n\r\n        <button type=\"submit\" className={S.btn}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\nexport default ContactForm;\r\n","import React, { RefCallback } from \"react\";\r\nimport S from \"./ContactList.module.css\";\r\ntype listType = {\r\n  id: string;\r\n  name: string;\r\n  number: string;\r\n};\r\n\r\ninterface PropsType {\r\n  list: listType[];\r\n  filterValue: string;\r\n  deleteContact: any;\r\n}\r\n\r\nconst ContactList: React.FC<PropsType> = ({\r\n  list,\r\n  filterValue,\r\n  deleteContact,\r\n}) => {\r\n  return (\r\n    <ul className={S.list}>\r\n      {list.map(\r\n        ({ id, name, number }) =>\r\n          name.toLowerCase().includes(filterValue.toLowerCase()) && (\r\n            <li key={id} className={S.row}>\r\n              <p className={S.text}>\r\n                {name}: {number}\r\n              </p>\r\n              <button className={S.btn} onClick={() => deleteContact(id)}>\r\n                Удалить\r\n              </button>\r\n            </li>\r\n          )\r\n      )}\r\n    </ul>\r\n  );\r\n};\r\nexport default ContactList;\r\n","import React from \"react\";\r\nimport S from \"./Filter.module.css\";\r\n\r\ninterface PropsType {\r\n  filterValue: string;\r\n  handleChangeFilter: any;\r\n}\r\n\r\nconst Filter: React.FC<PropsType> = ({ filterValue, handleChangeFilter }) => {\r\n  return (\r\n    <div>\r\n      <label className={S.caption}>Find contacts by name</label>\r\n      <input\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        className={S.input}\r\n        value={filterValue}\r\n        onChange={handleChangeFilter}\r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport default Filter;\r\n","import React, { Component } from \"react\";\r\nimport ContactForm from \"./components/ContactForm\";\r\nimport ContactList from \"./components/ContactList\";\r\nimport Filter from \"./components/Filter\";\r\nimport S from \"./App.module.css\";\r\n\r\ntype contactsType = {\r\n  id: string;\r\n  name: string;\r\n  number: string;\r\n};\r\n\r\ninterface StateType {\r\n  contacts: contactsType[];\r\n  filter: string;\r\n}\r\n\r\nclass App extends Component {\r\n  state: StateType = {\r\n    contacts: [\r\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n    ],\r\n    filter: \"\",\r\n  };\r\n\r\n  findName = (str: string): boolean => {\r\n    return this.state.contacts.find((item) =>\r\n      item.name.toLowerCase().includes(str.toLowerCase())\r\n    )\r\n      ? true\r\n      : false;\r\n  };\r\n\r\n  formSubmitHandler = (data: StateType) => {\r\n    this.setState((prevState: StateType) => ({\r\n      contacts: [...prevState.contacts, data],\r\n    }));\r\n  };\r\n\r\n  changeFilter = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({ filter: e.currentTarget.value });\r\n  };\r\n\r\n  deleteContact = (id: string): void => {\r\n    this.setState((prevState: StateType) => ({\r\n      contacts: prevState.contacts.filter((item) => item.id !== id),\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className={S.container}>\r\n        <h1>Phonebook</h1>\r\n        <ContactForm\r\n          formSubmit={this.formSubmitHandler}\r\n          findName={this.findName}\r\n        />\r\n\r\n        <h2 className={S.title}>Contacts</h2>\r\n        <Filter\r\n          filterValue={this.state.filter}\r\n          handleChangeFilter={this.changeFilter}\r\n        />\r\n        <ContactList\r\n          list={this.state.contacts}\r\n          filterValue={this.state.filter}\r\n          deleteContact={this.deleteContact}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"ContactList_row__3bTCQ\",\"text\":\"ContactList_text__45Tzs\",\"btn\":\"ContactList_btn__1SFKZ\"};"],"sourceRoot":""}